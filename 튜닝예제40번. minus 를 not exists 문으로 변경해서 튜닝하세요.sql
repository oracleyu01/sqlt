🎯 예제40. MINUS를 NOT EXISTS로 변경하여 성능 최적화


📌 집합 연산자 종류

・ UNION ALL: 중복을 허용한 합집합.
・ UNION: 중복을 제거한 합집합.
・ INTERSECT: 교집합.
・ MINUS: 차집합(정렬 발생).

💻 실습예제1: DEPT 테이블에만 존재하는 부서번호 출력

✨튜닝전:



✨튜닝후:



📌 설명

・ NOT EXISTS를 사용하여 EMP 테이블에 존재하지 않는 DEPT의 부서번호를 필터링.
・ 정렬 없이 바로 결과를 반환하여 성능 최적화.

🤔  문제: TELECOM_TABLE에만 존재하는 TELECOM 출력

✨튜닝전:


✨튜닝후:



📌 설명

・ TELECOM_TABLE에서 EMP19에 존재하지 않는 TELECOM 데이터를 필터링.
・ 정렬 작업을 제거하여 성능 향상.

📝 이론 설명

MINUS 연산자는 두 테이블 간의 차집합을 구하며, 결과를 정렬합니다. 
대량의 데이터를 다룰 때 정렬 작업은 성능 저하의 원인이 될 수 있습니다. 
**NOT EXISTS**는 정렬 작업 없이 조건에 부합하는 데이터를 바로 필터링하여 더 나은 성능을 제공합니다.

- 💻  다음 수업 바로가기 

-- https://github.com/oracleyu01/sqlt/blob/main/튜닝예제41. 데이터 분석함수를 이용해서 SQL을 재작성할 줄 알아야해요.sql

